import React from "react";
import { action } from "@storybook/addon-actions";
import { storiesOf } from "@storybook/react";
import { Icon, IconButton, Input, InputType, Size } from "../../components";
import { CategoryName, wInfo } from "../utils";
var styles = require("./input.stories.scss");
var placeholder = "Enter text";
var helperMsg = "Helper text";
var errorMsg = "Validation error message, blah blah blah...";
storiesOf(CategoryName.TextFields, module).addWithJSX("Input", wInfo("")(function () { return (React.createElement("div", { className: styles.rootContainer },
    React.createElement("h6", { className: styles.groupHeader }, "Below are different sizes: Large, Medium, Small"),
    React.createElement("div", { className: styles.itemsContainer },
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "Large", size: Size.Large })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Medium", size: Size.Medium })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Small", size: Size.Small }))),
    React.createElement("h6", { className: styles.groupHeader }, "Below are different types: Number, Text, Email"),
    React.createElement("div", { className: styles.itemsContainer },
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Number, label: "Number", size: Size.Large })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Text", size: Size.Large })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Email, label: "Email", size: Size.Large }))),
    React.createElement("h6", { className: styles.groupHeader }, "Below are different looks: Normal, Error, Disable, WithHelper, WithToolTip, WithSuffix"),
    React.createElement("div", { className: styles.itemsContainer },
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, placeholder: placeholder, label: "Normal", value: "", size: Size.Large, showCharacterCount: true })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Normal: Helper", size: Size.Large, showHelper: true, helperMsg: helperMsg, showCharacterCount: true })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "Disable", size: Size.Large, value: "Text input disabled", disabled: true, helperMsg: helperMsg, showCharacterCount: true })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Disable: with placeholder", size: Size.Large, disabled: true, helperMsg: helperMsg, showCharacterCount: true })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Tooltip", size: Size.Large, value: "Text input with toolTip", showTooltip: true, toolTipsContent: React.createElement("div", null,
                    "Something need to show like below - ",
                    React.createElement("br", null),
                    "Please follow this general format:",
                    React.createElement("br", null),
                    "E.g. use \u201901\u2019, it represents \u20181st floor\u2019. In the same way:",
                    React.createElement("br", null),
                    "10 = 10th floor",
                    React.createElement("br", null),
                    "MEZZ = Mezzanine",
                    React.createElement("br", null),
                    "RF = Roof",
                    React.createElement("br", null),
                    "B1 = Basement 1",
                    React.createElement("br", null)) })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Tooltip", size: Size.Large, value: "Text input with toolTip", showTooltip: true, toolTipsContent: "Please follow this general format: E.g. use ’01’, it represents ‘1st floor’. In the same way: 02 = 2nd floor, 10 = 10th floor, MEZZ = Mezzanine, RF = Roof, B1 = Basement 1" })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Suffix", size: Size.Large, suffix: "suffix" })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), placeholder: placeholder, type: InputType.Text, label: "Error", size: Size.Large, showError: true, value: "Text input with error", errorMsg: errorMsg, showCharacterCount: true }),
            React.createElement("p", { className: styles.content }, "Other following contents (Input error msg should float on this)")),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "iconSignifier", size: Size.Large, value: "Text input with error", iconSignifier: React.createElement(Icon, { size: "16", className: styles.iconSignifier, type: "search" }), onKeyPress: action("value") })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "inlineElement", size: Size.Large, value: "inline element", inlineElement: React.createElement("div", { className: styles.deleteIcon },
                    React.createElement(IconButton, { type: "delete", onClick: action("delete") })), onKeyPress: action("value") })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "InlineElement with Error icon ", size: Size.Large, value: "inline element", inlineElement: React.createElement("div", null,
                    React.createElement(IconButton, { type: "delete", onClick: action("delete") })), onKeyPress: action("value"), showError: true, errorMsg: errorMsg })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, label: "InlineElement with loading icon ", size: Size.Large, loading: true, onKeyPress: action("value") }))),
    React.createElement("h6", { className: styles.groupHeader }, "Below are some length limits for input"),
    React.createElement("div", { className: styles.itemsContainer },
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Text, placeholder: placeholder, label: "Text MaxLength=10", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.Number, placeholder: placeholder, label: "Number MaxLength=10", size: Size.Large, value: "123", maxLength: 10 }))),
    React.createElement("h6", { className: styles.groupHeader }, "Numbers Input: Typing filter(s) samples, Integer/Decimal:"),
    React.createElement("div", { className: styles.itemsContainer },
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.IntegerText, placeholder: placeholder, label: "IntegerText", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.DigitsOnly, placeholder: placeholder, label: "DigitsOnly", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.NonZeroLeadingDigits, placeholder: placeholder, label: "NonZeroLeadingDigits", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.DecimalText, placeholder: placeholder, label: "Decimal", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.PositiveDecimalText, placeholder: placeholder, label: "PositiveDecimal", size: Size.Large, maxLength: 10 })),
        React.createElement("div", { className: styles.box },
            React.createElement(Input, { onChange: action("value"), type: InputType.AlphaNumeric, placeholder: placeholder, label: "AlphaNumeric", size: Size.Large, maxLength: 10 }))))); }));
//# sourceMappingURL=Input.stories.js.map